/*
* Необходимо превратить собранное на семинаре дерево поиска в полноценное левостороннее красно-черное дерево.
* И реализовать в нем метод добавления новых элементов с балансировкой.

Красно-черное дерево имеет следующие критерии:
• Каждая нода имеет цвет (красный или черный)
• Корень дерева всегда черный
• Новая нода всегда красная
• Красные ноды могут быть только левым ребенком
• У краной ноды все дети черного цвета

Соответственно, чтобы данные условия выполнялись, после добавления элемента в дерево
* необходимо произвести балансировку, благодаря которой все критерии выше станут валидными.
* Для балансировки существует 3 операции – левый малый поворот, правый малый поворот и смена цвета.
* */


public class Main {
    public static void main(String[] args) {
        start();
    }

    private static void start() {
        Tree<Integer> integerTree = new Tree<>();
        int[] values = new int[] {
                10, 3, 100, 70, 20, 35, 35, 52
        };

        for (int i = 0; i < values.length; i++) {
            boolean result = integerTree.add(values[i]);
            if (result) {
                System.out.println(values[i] + " - успешно добавлено!");
            } else {
                System.out.println(values[i] + " - уже существует.");
            }
        }
    }
}